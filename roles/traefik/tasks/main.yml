---
- name: Create namespace {{namespace}} 
  shell: kubectl create ns {{namespace}} > /dev/null 2>&1
  ignore_errors: yes
  register: ns_out
  changed_when: ns_out.rc == 0
  failed_when: false

- name: Label consul nodes
  shell: kubectl label --overwrite nodes node0 node1 node2 consul=server

- name: Deploy consul service
  shell: kubectl apply -f {{ role_path }}/files/consul-svc.yaml --namespace={{namespace}}

- name: Deploy consul nodes
  shell: kubectl apply -f {{ role_path }}/files/consul-statefulset.yaml --namespace={{namespace}}

- name: 'Wait for consul-0'
  shell: kubectl get pod consul-0 -n {{namespace}} >/dev/null 2>&1
  register: consul_result
  until: consul_result.rc == 0
  retries: 100
  delay: 5

- name: Get kube dns ip address
  shell: kubectl get svc kube-dns -n kube-system | tail -n1 | awk '{ print $3 }'
  register: dns_out
   
- name: Deploy traefik config map
  shell: kubectl apply -f {{ role_path }}/files/traefik-cm.yaml --namespace={{namespace}}

- name: Deploy traefik secret
  shell: kubectl apply -f {{ role_path }}/files/traefik-secret.yaml --namespace={{namespace}}

- name: Deploy traefik service account
  shell: "cat {{ role_path }}/files/traefik-sa.yaml | sed 's#namespace: traefik#namespace: {{namespace}}#' | kubectl apply -f -"

- name: Deploy traefik service
  shell: kubectl apply -f {{ role_path }}/files/traefik-svc.yaml --namespace={{namespace}}

- name: Deploy traefik deamonset
  shell: kubectl apply -f {{ role_path }}/files/traefik-ds.yaml --namespace={{namespace}}

- name: 'Wait for trafik-ingress-controller'
  shell: kubectl get pod -n {{namespace}} -l k8s-app=traefik-ingress-lb 2>/dev/null | grep Running
  register: consul_result
  until: consul_result.rc == 0
  retries: 100
  delay: 5

- name: Check if config exits
  shell: kubectl --namespace {{namespace}} exec consul-0 consul kv get traefik/loglevel
  ignore_errors: yes
  register: config_out
  changed_when: config_out.stdout.find('Error!') != -1

- name: Get pod name of a traefik controller
  shell: kubectl get pods -n {{namespace}} -l k8s-app=traefik-ingress-lb | grep Running | tail -n1 | awk '{ print $1 }'
  register: pod_name_out
  when: config_out.changed

- name: Copy config to consul
  shell: kubectl --namespace {{namespace}} exec {{ pod_name_out.stdout }} traefik storeconfig
  when: config_out.changed

- name: Bugfix https://github.com/containous/traefik/issues/927
  shell: kubectl --namespace {{namespace}} exec  consul-0 consul kv delete traefik/acme/storagefile  
  when: config_out.changed
